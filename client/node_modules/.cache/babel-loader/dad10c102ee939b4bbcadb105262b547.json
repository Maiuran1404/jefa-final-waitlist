{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _v = require('uuid/v4');\n\nvar _v2 = _interopRequireDefault(_v);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar renderers = [];\n\nvar injectScript = function injectScript(locale) {\n  window.GoogleRecaptchaLoaded = function () {\n    while (renderers.length) {\n      var renderer = renderers.shift();\n      renderer();\n    }\n  };\n\n  var script = document.createElement('script');\n  script.id = 'recaptcha';\n  script.src = 'https://www.google.com/recaptcha/api.js?hl=' + locale + '&onload=GoogleRecaptchaLoaded&render=explicit';\n  script.type = 'text/javascript';\n  script.async = true;\n  script.defer = true;\n\n  script.onerror = function (error) {\n    throw error;\n  };\n\n  document.body.appendChild(script);\n};\n\nvar GoogleRecaptcha = function (_React$Component) {\n  _inherits(GoogleRecaptcha, _React$Component);\n\n  function GoogleRecaptcha() {\n    _classCallCheck(this, GoogleRecaptcha);\n\n    return _possibleConstructorReturn(this, (GoogleRecaptcha.__proto__ || Object.getPrototypeOf(GoogleRecaptcha)).apply(this, arguments));\n  }\n\n  _createClass(GoogleRecaptcha, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _props = this.props,\n          sitekey = _props.sitekey,\n          locale = _props.locale,\n          badge = _props.badge,\n          tabindex = _props.tabindex,\n          onResolved = _props.onResolved,\n          onError = _props.onError,\n          onExpired = _props.onExpired,\n          onLoaded = _props.onLoaded;\n      this.callbackName = 'GoogleRecaptchaResolved-' + (0, _v2.default)();\n      window[this.callbackName] = onResolved;\n\n      var loaded = function loaded() {\n        if (_this2.container) {\n          var wrapper = document.createElement('div'); // This wrapper must be appended to the DOM immediately before rendering\n          // reCaptcha. Otherwise multiple reCaptchas will act jointly somehow.\n\n          _this2.container.appendChild(wrapper);\n\n          var recaptchaId = window.grecaptcha.render(wrapper, {\n            sitekey: sitekey,\n            size: 'invisible',\n            badge: badge,\n            tabindex: tabindex,\n            callback: _this2.callbackName,\n            'error-callback': onError,\n            'expired-callback': onExpired\n          });\n\n          _this2.execute = function () {\n            return window.grecaptcha.execute(recaptchaId);\n          };\n\n          _this2.reset = function () {\n            return window.grecaptcha.reset(recaptchaId);\n          };\n\n          _this2.getResponse = function () {\n            return window.grecaptcha.getResponse(recaptchaId);\n          };\n\n          onLoaded();\n        }\n      };\n\n      if (window.grecaptcha && window.grecaptcha.render && window.grecaptcha.execute && window.grecaptcha.reset && window.grecaptcha.getResponse) {\n        loaded();\n      } else {\n        renderers.push(loaded);\n\n        if (!document.querySelector('#recaptcha')) {\n          injectScript(locale);\n        }\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      while (this.container.firstChild) {\n        this.container.removeChild(this.container.firstChild);\n      } // There is a chance that the reCAPTCHA API lib is not loaded yet, so check\n      // before invoking reset.\n\n\n      if (this.reset) {\n        this.reset();\n      }\n\n      delete window[this.callbackName];\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var style = this.props.style;\n      return _react2.default.createElement('div', _extends({\n        ref: function ref(_ref) {\n          return _this3.container = _ref;\n        }\n      }, style && {\n        style: style\n      }));\n    }\n  }]);\n\n  return GoogleRecaptcha;\n}(_react2.default.Component);\n\nGoogleRecaptcha.propTypes = {\n  sitekey: _propTypes2.default.string.isRequired,\n  locale: _propTypes2.default.string,\n  badge: _propTypes2.default.oneOf(['bottomright', 'bottomleft', 'inline']),\n  tabindex: _propTypes2.default.number,\n  onResolved: _propTypes2.default.func,\n  onError: _propTypes2.default.func,\n  onExpired: _propTypes2.default.func,\n  onLoaded: _propTypes2.default.func,\n  style: _propTypes2.default.object\n};\nGoogleRecaptcha.defaultProps = {\n  locale: 'en',\n  badge: 'bottomright',\n  tabindex: 0,\n  onResolved: function onResolved() {},\n  onError: function onError() {},\n  onExpired: function onExpired() {},\n  onLoaded: function onLoaded() {}\n};\nexports.default = GoogleRecaptcha;","map":null,"metadata":{},"sourceType":"script"}