{"version":3,"sources":["components/Form.jsx","components/DisplayTopics.jsx","containers/Home.js","components/NoteForm.jsx","containers/Topicpage.js","App.js","serviceWorker.js","index.js"],"names":["Form","state","topicTitle","description","handleChange","e","name","target","value","_this","setState","Object","defineProperty","submit","preventDefault","_this$state","axios","url","method","data","then","response","props","addTopic","react_default","a","createElement","className","autoComplete","onSubmit","this","index_es","id","label","onChange","variant","color","onClick","Component","isEmpty","require","DisplayTopics","_id","i","removeTopic","allTopics","topics","align","map","_ref","key","component","scope","window","location","href","concat","Home","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","fetchTopics","console","log","get","toConsumableArray","catch","alert","bind","assertThisInitialized","delete","components_Form","components_DisplayTopics","NoteForm","note","Topicpage","fetchTopic","componentWillMount","topicId","decodeURI","match","params","topic","trim","addNote","notes","push","components_NoteForm","length","App","react_router_dom","react_router","exact","path","render","Boolean","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d6047954.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport axios from 'axios';\n\nclass Form extends Component {\n  state = {\n      topicTitle: '',\n      description: '',\n  };\n\n  handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value });\n  };\n\n  submit = e => {\n    e.preventDefault();\n    const { topicTitle, description } = this.state;\n    axios({\n      url: '/topics',\n      method: 'POST',\n      data: {\n        topicTitle,\n        description\n      }\n    })\n      .then((response) => {\n        this.props.addTopic(response.data);\n        this.setState({\n          topicTitle: '',\n          description: ''\n        });\n      })\n      // .catch(() => alert('Failed uploading data'))\n  };\n  render() {\n    return (\n      <form className=\"form noValidate\" autoComplete=\"off\" onSubmit={this.submit}>\n        <h2> Digital Brain anno 2020 </h2>\n        <TextField\n          id=\"standard-dense\"\n          value={this.state.topicTitle}\n          label=\"Topic Title\"\n          name=\"topicTitle\"\n          onChange={this.handleChange}\n        />\n\n        <TextField\n          name=\"description\"\n          value={this.state.description}\n          id=\"standard-dense\"\n          onChange={this.handleChange}\n          label=\"description\"\n        />\n\n        <Button variant=\"contained\" color=\"primary\" onClick={this.submit}> Submit </Button>\n\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from 'react';\nimport { Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\nconst { isEmpty } = require('lodash');\n\n\n\nclass DisplayTopics extends Component {\n\n    removeTopic(_id, i) {\n        this.props.removeTopic(_id, i);\n    }\n\n    render() {\n        const allTopics = this.props.topics;\n        const topics = !isEmpty(allTopics) ? allTopics : [];\n\n\n        return (\n            <div className=\"topics\">\n                {!isEmpty(topics) ? <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Title</TableCell>\n                            <TableCell align=\"right\">Description</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {topics.map(({ topicTitle, description, _id }, key) => (\n                            \n                                <TableRow key={key}>\n                                    <TableCell component=\"th\" scope=\"row\"> {topicTitle ? topicTitle : 'No Topic Title Found'} </TableCell>\n                                    <TableCell align=\"right\">{description ? description : 'No description Found'}</TableCell>\n                                    <button onClick={(e) => {e.preventDefault(); window.location.href=`/topics/${_id}`;}}>Open me</button>\n                                    <button onClick={() => { this.removeTopic(_id, key)}} key={key}> Remove me </button>\n                                </TableRow>\n                        ))}\n                    </TableBody>\n                </Table> : null}\n            </div>\n        );\n    }\n}\n\nexport default DisplayTopics;\n","import React, { Component } from 'react';\nimport Form from '../components/Form';\nimport DisplayTopics from '../components/DisplayTopics';\nimport axios from 'axios';\n\nclass Home extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { \n      topics: []\n    };\n    this.removeTopic = this.removeTopic.bind(this);\n    this.fetchTopics = this.fetchTopics.bind(this);\n    this.addTopic = this.addTopic.bind(this);\n}\n\n\n  componentDidMount = () => {\n    this.fetchTopics();\n    console.log('this is topics' + this.state.topics)\n  };\n\n\n  fetchTopics = () => {\n    axios.get('/topics')\n      .then((response) => {\n        const { topics } = response.data;\n        this.setState({\n          topics: [...this.state.topics, ...topics]\n        })\n      })\n      .catch(() => alert('Error fetching topics'));\n  };\n\n  addTopic = ({ topicTitle, description }) => {\n    this.setState({\n      topics: [...this.state.topics, { topicTitle: topicTitle, description: description  }]\n      \n    });\n  };\n\n  removeTopic(_id, i){\n    \n    // let topics = this.state.topics.slice();\n    // topics.splice(i, 1);\n    axios.delete(`/topics/${_id}`)\n\n    // this.setState({\n    //     topics: topics\n    // });\n}\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Form addTopic={this.addTopic}/>\n        <DisplayTopics topics={this.state.topics} removeTopic={this.removeTopic} />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport axios from 'axios';\n\nclass NoteForm extends Component {\n  state = {\n      note: '',\n  };\n\n  handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value });\n  };\n\n  submit = (e) => {\n    e.preventDefault();\n    const { note } = this.state;\n    const { _id } = this.props;\n    axios({\n      url: `/topics/${_id}/note`,\n      method: 'PATCH',\n      data: {\n        note\n      }\n    })\n      .then((response) => {\n        // this.props.addNote(response.data);\n        this.setState({\n            note: ''\n        });\n      })\n      // .catch(() => alert('Failed uploading data'))\n  };\n  render() {\n    return (\n      <form className=\"form noValidate\" autoComplete=\"off\" onSubmit={this.submit}>\n        <h2> New Note  </h2>\n        <TextField\n          id=\"standard-dense\"\n          value={this.state.note}\n          label=\"Note\"\n          name=\"note\"\n          onChange={this.handleChange}\n        />\n\n\n        <Button variant=\"contained\" color=\"primary\" onClick={this.submit}> Submit </Button>\n\n      </form>\n    );\n  }\n}\n\nexport default NoteForm;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport NoteForm from '../components/NoteForm';\n\nclass Topicpage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { \n        topicId: '',\n        topicTitle: '',\n        description: '',\n        notes: []\n    };\n    // this.removeTopic = this.removeTopic.bind(this);\n    this.fetchTopic = this.fetchTopic.bind(this);\n    // this.addTopic = this.addTopic.bind(this);\n}\n\n\n  componentDidMount = () => {\n    this.fetchTopic();\n  };\n\n  componentWillMount = () => {\n    const topicId = decodeURI((this.props.match.params.topic).trim());\n    this.setState({\n        topicId: topicId\n    })\n    \n  }\n\n  addNote = ({ note }) => {\n      this.setState({\n          notes: this.state.notes.concat(note)\n      })\n  }\n\n  fetchTopic = () => {\n      console.log('Myaoooo' + this.state.topicId)\n      axios.get(`/topics/${this.state.topicId}`)\n        .then((response) => {\n            console.log(response.data)\n            this.setState({\n                topicTitle: response.data.topicTitle,\n                description: response.data.description,\n    \n                notes: this.state.notes.push(response.data.notes)\n            })\n            console.log('Peteee' + this.state.notes)\n        })\n        .catch(() => alert('Error fethcing topic boi'))\n  }\n\n\n\n//   addTopic = ({ topicTitle, description }) => {\n//     this.setState({\n//       topics: [...this.state.topics, { topicTitle: topicTitle, description: description  }]\n      \n//     });\n//   };\n\n//   removeTopic(_id, i){\n    \n//     // let topics = this.state.topics.slice();\n//     // topics.splice(i, 1);\n//     axios.delete(`/topics/${_id}`)\n\n//     // this.setState({\n//     //     topics: topics\n//     // });\n// }\n\n\n  render() {\n    return (\n      <div>\n          <NoteForm _id={this.state.topicId} />\n          <h1>{this.state.topicId}</h1>\n          <p>{this.state.topicTitle}</p>\n          <p>{this.state.description}</p>\n          <p>{this.state.notes}</p>\n        {console.log('Maayoo' + this.state.notes)}\n          {\n              this.state.notes.length > 0 && this.state.notes.map((note) => (\n                    <p>{note}</p>\n              ))\n          }\n      </div>\n    );\n  }\n}\n\nexport default Topicpage;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n//containers\nimport Home from './containers/Home';\nimport Topicpage from './containers/Topicpage';\n\nconst App = () => {\n\n    return (\n      \n\n        \n          <Router>\n              <Switch>\n                \n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/topics/:topic\" component={Topicpage} />\n                <Route render={\n                  () => <h3>Oops, we couldn't find this page. Try reverting to homes</h3>\n                }/>\n              </Switch>\n          </Router>\n\n    );\n  }\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}